plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.2'
    id 'io.spring.dependency-management' version '1.1.4'
    id "org.flywaydb.flyway" version "9.8.1"
    id "io.freefair.lombok" version "8.4"
    id "org.sonarqube" version "4.4.1.3373"
    id 'jacoco'
}

group = 'com.fiap.techchallenge'
version = '0.0.1-SNAPSHOT'

sonar {
    properties {
        property "sonar.projectKey", "fiap-four-lanches_fourlanches.kitchen.app"
        property "sonar.organization", "fiap-four-lanches"
        property "sonar.host.url", "https://sonarcloud.io"
        property "sonar.coverage.jacoco.xmlReportPaths", "${buildDir}/reports/jacoco/test/*.xml"
        property "sonar.java.coveragePlugin", "jacoco"
    }
}

java {
    sourceCompatibility = '17'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.1.0'
    implementation 'org.flywaydb:flyway-core'
    implementation 'org.flywaydb:flyway-mysql'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    runtimeOnly 'com.h2database:h2'
    runtimeOnly 'com.mysql:mysql-connector-j'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

flyway {
    url = 'dbc:mysql://localhost:3306/kitchen'
    user = System.getenv('DATABASE_USERNAME')
    password = System.getenv('DATABASE_PASSWORD')
    cleanDisabled = false
}

tasks.named('test') {
    useJUnitPlatform()
}

test {
    finalizedBy jacocoTestReport // report is always generated after tests run
}

jacocoTestReport {
    dependsOn test // tests are required to run before generating the report

    reports {
        xml.required = true
        xml.destination file("${buildDir}/reports/jacoco/test/jacocoTestReport.xml")
    }

    afterEvaluate {
        classDirectories.setFrom(files(classDirectories.files.collect {
            fileTree(dir: it, exclude: [
                    "com/fiap/techchallenge/fourlanches/kitchen/app/domain/entity/**.*",
                    "com/fiap/techchallenge/fourlanches/kitchen/app/adapter/driven/data/entity/**.*",
                    "com/fiap/**/SpringJpaConfig**",
                    "com/fiap/techchallenge/fourlanches/kitchen/app/Application.java"
            ])
        }))
    }
}
